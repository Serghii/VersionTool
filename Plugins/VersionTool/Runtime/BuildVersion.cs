using UnityEngine;

namespace Plugins.VersionTool
{
    public class BuildVersion : ScriptableObject
    {
        /// <summary>
        /// [1.0] Short version containing only major and minor identifiers
        /// </summary>
        public string Short => $"{_majorVersion}.{_minorVersion}.{_buildVersion}";

        /// <summary>
        /// [1.0_123abcd] Expanded version which contains major, minor and git commit hash identifiers
        /// </summary>
        public string Expanded => $"{Short}{(string.IsNullOrEmpty(Git) ? string.Empty : $"_{Git}")}";

        /// <summary>
        /// [1.0_123abcd - Stupid Callsign] The long version with major, minor, git commit hash identifiers and an autogenerated call-sign
        /// </summary>
        public string Full => $"{Expanded} - {Callsign}";

        public string Major
        {
            get => _majorVersion;
            set => _majorVersion = value;
        }

        public string Minor
        {
            get => _minorVersion;
            set => _minorVersion = value;
        }

        public string Build
        {
            get => _buildVersion;
            set => _buildVersion = value;
        }

        public string Git
        {
            get => _git;
            set => _git = value;
        }

        public string Callsign
        {
            get => _callsign;
            set => _callsign = value;
        }

        [SerializeField] private string _majorVersion;
        [SerializeField] private string _minorVersion;
        [SerializeField] private string _buildVersion;
        [SerializeField] private string _git;
        [SerializeField] private string _callsign;

        
        public override string ToString()
        {
            return Full;
        }
    }
}